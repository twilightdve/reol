{"version":3,"file":"component---src-pages-quiz-bbq-2025-jsx-86b93e8696e467e69c69.js","mappings":"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","sources":["webpack://fansite-reol/./src/pages/quiz/bbq2025.jsx","webpack://fansite-reol/./node_modules/uuid/dist/esm-browser/native.js","webpack://fansite-reol/./node_modules/uuid/dist/esm-browser/rng.js","webpack://fansite-reol/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://fansite-reol/./node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { navigate } from \"gatsby\";\n\nimport { useLocation } from \"@reach/router\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { setDoc, doc, serverTimestamp } from \"firebase/firestore\";\nimport db, { quizData } from \"../../services/bbq2025/common\";\n\nconst QuizPage = () => {\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n  const qParam = parseInt(query.get(\"q\") || \"1\", 10);\n  const question = quizData[qParam - 1];\n  const [selected, setSelected] = useState(null);\n  const [answers, setAnswers] = useState({});\n\n  useEffect(() => {\n    if (typeof window === \"undefined\") return;\n    \n    const nickname = localStorage.getItem(\"bbq2025_nickname\");\n    if (!nickname) {\n      navigate(\"/quiz/bbq2025/intro\");\n      return;\n    }\n\n    let userHash = localStorage.getItem(\"bbq2025_user_hash\");\n    if (!userHash) {\n      userHash = uuidv4();\n      localStorage.setItem(\"bbq2025_user_hash\", userHash);\n    }\n\n    const storedAnswers = JSON.parse(localStorage.getItem(\"bbq2025_answers\") || \"{}\");\n    setAnswers(storedAnswers);\n\n    const firstUnansweredIndex = quizData.findIndex(q => !storedAnswers[q.id]);\n    if (firstUnansweredIndex !== -1 && qParam > firstUnansweredIndex + 1) {\n      navigate(`/quiz/bbq2025?q=${firstUnansweredIndex + 1}`);\n    }\n  }, [qParam]);\n\n  const handleSelect = async (option) => {\n    if (selected) return;\n    setSelected(option);\n\n    const updatedAnswers = { ...answers, [question.id]: option };\n    setAnswers(updatedAnswers);\n    localStorage.setItem(\"bbq2025_answers\", JSON.stringify(updatedAnswers));\n\n    const userHash = localStorage.getItem(\"bbq2025_user_hash\") || \"\";\n    const nickname = localStorage.getItem(\"bbq2025_nickname\") || \"\";\n    const score = quizData.reduce((acc, q) => acc + (updatedAnswers[q.id] === q.answer ? 1 : 0), 0);\n    console.log(updatedAnswers)\n    console.log(score)\n\n    try {\n      await setDoc(doc(db, \"bbq2025_answers\", userHash), {\n        userHash,\n        nickname,\n        answers: quizData.map(q => updatedAnswers[q.id] ? q.options.indexOf(updatedAnswers[q.id]) : -1),\n        score,\n        timestamp: serverTimestamp(),\n      });\n    } catch (err) {\n      console.log(err)\n      alert(\"送信に失敗しました。通信状況をご確認ください。\");\n    }\n\n    if (qParam === quizData.length) {\n      navigate(\"/quiz/bbq2025/result-waiting\");\n    } else {\n      setTimeout(() => {\n        setSelected(null);\n        navigate(`/quiz/bbq2025?q=${qParam + 1}`);\n      }, 500);\n    }\n  };\n\n  if (!question) return <div>問題が存在しません。</div>;\n\n  return (\n    <div className=\"h-svh px-4 py-2 max-w-xl mx-auto bg-[#2F4D3A] overflow-y-hidden font-tegaki\">\n      <h2 className=\"font-bold mb-4 text-white\">\n        <span className=\"text-sm\">Q.{qParam}／{quizData.length}</span>\n        <br />\n        <p className=\"text-xl py-2\">{question.question}</p>\n      </h2>\n      <div className=\"space-y-2 h-full\">\n        {question.options.map((opt, idx) => {\n          const optionLabels = [\"①\", \"②\", \"③\", \"④\"];\n          return (\n            <button\n              key={idx}\n              className=\"w-full h-1/6 bg-[#F3E7D3] rounded border-[#E8C55D] border-2 font-bold text-2xl active:bg-[#F3E7D3] text-left px-4\"\n              onClick={() => handleSelect(opt)}\n              disabled={!!selected}\n            >\n              {optionLabels[idx]} {opt}\n            </button>\n          );\n        })}\n      </div>\n      {selected && <p className=\"mt-4 text-green-600\">選択しました：{selected}</p>}\n    </div>\n  );\n};\n\nexport default QuizPage;\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n"],"names":["QuizPage","location","useLocation","query","URLSearchParams","search","qParam","parseInt","get","question","quizData","selected","setSelected","useState","answers","setAnswers","useEffect","window","localStorage","getItem","navigate","userHash","uuidv4","setItem","storedAnswers","JSON","parse","firstUnansweredIndex","findIndex","q","id","React","className","length","options","map","opt","idx","key","onClick","async","option","updatedAnswers","stringify","nickname","score","reduce","acc","answer","console","log","setDoc","doc","db","indexOf","timestamp","serverTimestamp","err","alert","setTimeout","handleSelect","disabled","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","toLowerCase","buf","rnds","random","rng","Error","RangeError"],"sourceRoot":""}